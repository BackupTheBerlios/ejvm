#ifndef JNIMANAGER_H_
#define JNIMANAGER_H_
#include "jni.h"
class Object;

class JNIManager
{
public:

	static JNIManager * getInstance(){
		//this method should be implemented, for now it will return NULL;
		return NULL;
	}
	
	/**This method adds the given obj to the data structure saving the local 
	 * objects referenced by a native function.
	 * this data structure will be used to adjust the state of the objects referenced
	 * after the return of the native method.
	 */
    Object * addJNILocalRef(Object* obj){
     	//This method should be imnplemented , for now it is empty..
     	return NULL;
    }
    
    /**
     * This method deletes a local reference from the local reference generated by the top native call
     */
    void deleteLocalRef(Object *obj){
    		//this method should be implemented , for now it is empty...
    }
	
	
	virtual ~JNIManager();
private:
	JNIManager(); 
	
	
};

#endif /*JNIMANAGER_H_*/
