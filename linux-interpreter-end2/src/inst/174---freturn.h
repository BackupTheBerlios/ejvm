//******************************************************************//
//*           Automatically Generated File Please Do Edit          *//
//******************************************************************//

//Description   : An Implementation for Instruction freturn  (0xae) (174)        
//Generated by  : Eslam Al-Morshdy (eslam@gmx.de)                        
//for Bugs      :                                         				  
//Last Edited by:												      



//========
//CAUTIONS :
//========
//	 (1) - Nothig Goes Here or it will be Lost in later Modification !
//	 (2) - Namming Convention  for local variables of an instruction 
//	        implementation should have a prefix that refrence the instruction 



//=========
//VARIABLES :
//=========
//	 unsigned int   	  pc     ;    /* program counter   */	
//	 unsigned int*  	  op_stk ;    /* operand stack     */	
//	 unsigned int*  	  locals ;    /* local variables   */	
//	 e_byte_t*            code  ;    /*byte-code stream   */	


#define e_CORE_freturn 	 \
	 e_CORE_freturn_START:   \
 	 	 {\
	 auto e_frame_t* temp ;\
         pop(&java_stack ,(const void**) &temp);\
         if (NULL == temp){\
         	e_FREE_CURRENT_FRAME;\
         	return 0;\
         }else{\
         	auto e_j_float ftemp = e_ACCESS_TOP_OF_OPERAND_STACK_AND_RETURN_AS_LEFT_VALUE(e_j_float);\
         	e_FREE_CURRENT_FRAME;\
         	e_SET_CURRENT_FRAME(temp)\
         	e_PUSH_OPERAND_STACK(ftemp);\
         	free(temp);\
         	goto *e_Instruction_Label_Lookup[ *( e_j_u_byte* ) code_sofar ];\
         }\
	 }\
	 e_CORE_freturn_END: \

